<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.ikane</groupId>
	<artifactId>demo-springboot-angularseed</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>demo-springboot-angularseed</name>
	<description>Demo project for Spring Boot with angular-seed generated</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.3.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<rpm.release>1</rpm.release>
		<app.home>/home/administrator/microservices</app.home>
		<app.username>administrator</app.username>
		<app.group>administrator</app.group>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka</artifactId>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>	
			 <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>1.0</version>
                <executions>
                    <execution>
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <configuration>
                            <nodeVersion>v4.4.7</nodeVersion>
                            <npmVersion>3.10.5</npmVersion>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>install</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>bower install</id>
                        <goals>
                            <goal>bower</goal>
                        </goals>
                        <configuration>
                            <arguments>install --no-color</arguments>                           
                        </configuration>
                    </execution>
                    <execution>
                        <id>gulp build</id>
                        <goals>
                            <goal>gulp</goal>
                        </goals>
                        <configuration>
                            <arguments>build --no-notification</arguments>
                            <failOnError>true</failOnError>
                        </configuration>
                    </execution>
                </executions>
            </plugin>		
		</plugins>
		<resources>             
			<!-- used for variable substitution in application.properties -->
			<!-- https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-1.3-Release-Notes#maven-resources-filtering -->             
			<resource>                 
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.yml</include>
				</includes>                 
				<filtering>true</filtering>             
			</resource>
			<resource>                 
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*</include>
				</includes>                 
				<filtering>false</filtering>             
			</resource>          
		</resources>
	</build>
	
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Dalston.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

<profiles>
		<profile>
			<id>rpmbuild</id>
			<build>
				<plugins>
					<plugin>
			          <groupId>org.codehaus.mojo</groupId>
			          <artifactId>rpm-maven-plugin</artifactId>
			          <executions>
				          <execution>
				            <id>generate-rpm</id>
				            <phase>package</phase>
				            <goals>
				              <goal>rpm</goal> 
				            </goals>
				          </execution>
				      </executions>
				      <configuration>
					      	<group>Verifone/MMS</group>
					      	<packager>Verifone</packager>
					      	<targetOS>linux</targetOS>
					      	<release>${rpm.release}</release>
		      	
					      	<defaultUsername>${app.username}</defaultUsername>
					      	<defaultGroupname>${app.group}</defaultGroupname>
					      	<defaultDirmode>755</defaultDirmode>
					      	<defaultFilemode>755</defaultFilemode>
		      	
					      	<mappings>
					      		<mapping>
									<directory>${app.home}</directory>
									<sources>
										<source>
											<location>${project.build.directory}/${project.build.finalName}.jar</location>
										</source>
									</sources>
								</mapping>
								<mapping>
									<directory>/etc/systemd/system/</directory>
									<sources>
										<source>
											<location>${project.build.directory}/deployment/${project.artifactId}.service</location>
										</source>
									</sources>
									<directoryIncluded>false</directoryIncluded>
			                    	<configuration>false</configuration>
								</mapping>
								<mapping>
									<directory>${app.home}</directory>
									<sources>
										<source>
											<location>${project.build.directory}/deployment/${project.artifactId}.conf</location>
										</source>
									</sources>
									<directoryIncluded>false</directoryIncluded>
			                    	<configuration>false</configuration>
								</mapping>
					      	</mappings>
					      	<preinstallScriptlet>
			            		<script>echo "~~~~~ Installing ${project.artifactId} now...."</script>
			          		</preinstallScriptlet>
			          		<postinstallScriptlet>
			          			<script>
			          				echo "~~~~~ Copying ${project.artifactId}.service into /etc/systemd/system/"; \
			          				sudo systemctl daemon-reload; \
			          				sudo systemctl restart ${project.artifactId}.service; \
			          				echo "~~~~~ Finished Service installation"
			          			</script>
							</postinstallScriptlet>
				      	</configuration>
				    </plugin>
					
				</plugins>
			</build>
		</profile>
	</profiles>
  

</project>
